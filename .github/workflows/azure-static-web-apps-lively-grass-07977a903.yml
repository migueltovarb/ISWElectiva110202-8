name: Azure Static Web Apps Frontend CI/CD

on:
  push:
    branches:
      - developer
      - main
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - developer
  pull_request_target:
    types: [closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: (github.event_name == 'push' && (github.ref == 'refs/heads/developer' || github.ref == 'refs/heads/main')) || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Frontend
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
          lfs: false

      - name: Configurar Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'front_Restaurante/package-lock.json'

      - name: Instalar dependencias del frontend
        run: |
          cd front_Restaurante
          npm cache clean --force
          # Eliminar node_modules y package-lock.json para una instalaci√≥n limpia
          rm -rf node_modules
          rm -f package-lock.json
          # Reinstalar dependencias
          npm install

      

      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client

      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const coredemo = require('@actions/core')
            return await coredemo.getIDToken()
          result-encoding: string

      - name: Build And Deploy to Azure Static Web Apps
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_GRASS_07977A903 }}
          action: "upload"
          app_location: "/front_Restaurante"
          api_location: ""
          output_location: "dist"
          github_id_token: ${{ steps.idtoken.outputs.result }}

  close_pull_request_job:
    if: github.event_name == 'pull_request_target' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_LIVELY_GRASS_07977A903 }}
          action: "close"
